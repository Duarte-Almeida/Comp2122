<sequence_node size='2'>
  <declaration_node name='f' qualifier='private' type='var'>
    <initializer>
      <function_definition_node return_type='pointer to integer'>
        <arguments>
          <sequence_node size='1'>
            <declaration_node name='p' qualifier='private' type='pointer to integer'>
            </declaration_node>
          </sequence_node>
        </arguments>
        <block_node>
          <declarations>
          </declarations>
          <instructions>
            <sequence_node size='2'>
              <evaluation_node>
                <assignment_node>
                    <index_node>
                      <base>
                        <rvalue_node>
                          <variable_node>p</variable_node>
                        </rvalue_node>
                      </base>
                      <index>
                        <integer_node>2</integer_node>
                      </index>
                    </index_node>
                    <integer_node>1</integer_node>
                </assignment_node>
              </evaluation_node>
              <return_node>
                  <rvalue_node>
                    <variable_node>p</variable_node>
                  </rvalue_node>
              </return_node>
            </sequence_node>
          </instructions>
        </block_node>
      </function_definition_node>
    </initializer>
  </declaration_node>
  <program_node>
    <block_node>
      <declarations>
        <sequence_node size='1'>
          <declaration_node name='p' qualifier='private' type='pointer to integer'>
            <initializer>
              <nullptr_node>
              </nullptr_node>
            </initializer>
          </declaration_node>
        </sequence_node>
      </declarations>
      <instructions>
        <sequence_node size='7'>
          <evaluation_node>
            <assignment_node>
                <variable_node>p</variable_node>
                <stack_alloc_node>
                  <integer_node>3</integer_node>
                </stack_alloc_node>
            </assignment_node>
          </evaluation_node>
          <evaluation_node>
            <assignment_node>
                <index_node>
                  <base>
                    <rvalue_node>
                      <variable_node>p</variable_node>
                    </rvalue_node>
                  </base>
                  <index>
                    <integer_node>0</integer_node>
                  </index>
                </index_node>
                <integer_node>100</integer_node>
            </assignment_node>
          </evaluation_node>
          <evaluation_node>
            <assignment_node>
                <index_node>
                  <base>
                    <rvalue_node>
                      <variable_node>p</variable_node>
                    </rvalue_node>
                  </base>
                  <index>
                    <integer_node>1</integer_node>
                  </index>
                </index_node>
                <integer_node>40</integer_node>
            </assignment_node>
          </evaluation_node>
          <evaluation_node>
            <assignment_node>
                <index_node>
                  <base>
                    <rvalue_node>
                      <variable_node>p</variable_node>
                    </rvalue_node>
                  </base>
                  <index>
                    <integer_node>2</integer_node>
                  </index>
                </index_node>
                <integer_node>0</integer_node>
            </assignment_node>
          </evaluation_node>
          <evaluation_node>
            <function_call_node>
              <function pointer>
                <rvalue_node>
                  <variable_node>f</variable_node>
                </rvalue_node>
              </function pointer>
              <arguments>
                <sequence_node size='1'>
                  <rvalue_node>
                    <variable_node>p</variable_node>
                  </rvalue_node>
                </sequence_node>
              </arguments>
            </function_call_node>
          </evaluation_node>
          <write_node newline='true'>
            <sequence_node size='1'>
              <rvalue_node>
                <index_node>
                  <base>
                    <rvalue_node>
                      <variable_node>p</variable_node>
                    </rvalue_node>
                  </base>
                  <index>
                    <integer_node>2</integer_node>
                  </index>
                </index_node>
              </rvalue_node>
            </sequence_node>
          </write_node>
          <return_node>
              <integer_node>0</integer_node>
          </return_node>
        </sequence_node>
      </instructions>
    </block_node>
  </program_node>
</sequence_node>
