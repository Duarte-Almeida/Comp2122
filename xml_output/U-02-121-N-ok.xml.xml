<sequence_node size='3'>
  <declaration_node name='f' qualifier='private' type='var'>
    <initializer>
      <function_definition_node return_type='integer'>
        <arguments>
          <sequence_node size='1'>
            <declaration_node name='i' qualifier='private' type='integer'>
            </declaration_node>
          </sequence_node>
        </arguments>
        <block_node>
          <declarations>
          </declarations>
          <instructions>
            <sequence_node size='1'>
              <return_node>
                  <add_node>
                    <rvalue_node>
                        <variable_node>i</variable_node>
                    </rvalue_node>
                    <integer_node>1</integer_node>
                  </add_node>
              </return_node>
            </sequence_node>
          </instructions>
        </block_node>
      </function_definition_node>
    </initializer>
  </declaration_node>
  <declaration_node name='g' qualifier='private' type='var'>
    <initializer>
      <function_definition_node return_type='integer'>
        <arguments>
          <sequence_node size='2'>
            <declaration_node name='n' qualifier='private' type='integer'>
            </declaration_node>
            <declaration_node name='fun' qualifier='private' type='integer<integer>'>
            </declaration_node>
          </sequence_node>
        </arguments>
        <block_node>
          <declarations>
          </declarations>
          <instructions>
            <sequence_node size='1'>
              <return_node>
                  <function_call_node>
                    <function pointer>
                      <rvalue_node>
                          <variable_node>fun</variable_node>
                      </rvalue_node>
                    </function pointer>
                    <arguments>
                      <sequence_node size='1'>
                        <rvalue_node>
                            <variable_node>n</variable_node>
                        </rvalue_node>
                      </sequence_node>
                    </arguments>
                  </function_call_node>
              </return_node>
            </sequence_node>
          </instructions>
        </block_node>
      </function_definition_node>
    </initializer>
  </declaration_node>
  <program_node>
      <block_node>
        <declarations>
        </declarations>
        <instructions>
          <sequence_node size='4'>
            <write_node>
              <sequence_node size='1'>
                <function_call_node>
                  <function pointer>
                    <rvalue_node>
                        <variable_node>g</variable_node>
                    </rvalue_node>
                  </function pointer>
                  <arguments>
                    <sequence_node size='2'>
                      <integer_node>3</integer_node>
                      <rvalue_node>
                          <variable_node>f</variable_node>
                      </rvalue_node>
                    </sequence_node>
                  </arguments>
                </function_call_node>
              </sequence_node>
            </write_node>
            <write_node>
              <sequence_node size='1'>
                <function_call_node>
                  <function pointer>
                    <rvalue_node>
                        <variable_node>g</variable_node>
                    </rvalue_node>
                  </function pointer>
                  <arguments>
                    <sequence_node size='2'>
                      <integer_node>3</integer_node>
                      <function_definition_node return_type='integer'>
                        <arguments>
                          <sequence_node size='1'>
                            <declaration_node name='i' qualifier='private' type='integer'>
                            </declaration_node>
                          </sequence_node>
                        </arguments>
                        <block_node>
                          <declarations>
                          </declarations>
                          <instructions>
                            <sequence_node size='1'>
                              <return_node>
                                  <mul_node>
                                    <rvalue_node>
                                        <variable_node>i</variable_node>
                                    </rvalue_node>
                                    <integer_node>2</integer_node>
                                  </mul_node>
                              </return_node>
                            </sequence_node>
                          </instructions>
                        </block_node>
                      </function_definition_node>
                    </sequence_node>
                  </arguments>
                </function_call_node>
              </sequence_node>
            </write_node>
            <write_node>
              <sequence_node size='1'>
                <function_call_node>
                  <function pointer>
                    <rvalue_node>
                        <variable_node>g</variable_node>
                    </rvalue_node>
                  </function pointer>
                  <arguments>
                    <sequence_node size='2'>
                      <function_call_node>
                        <function pointer>
                          <function_definition_node return_type='integer'>
                            <arguments>
                              <sequence_node size='1'>
                                <declaration_node name='i' qualifier='private' type='integer'>
                                </declaration_node>
                              </sequence_node>
                            </arguments>
                            <block_node>
                              <declarations>
                              </declarations>
                              <instructions>
                                <sequence_node size='1'>
                                  <return_node>
                                      <add_node>
                                        <integer_node>7</integer_node>
                                        <rvalue_node>
                                            <variable_node>i</variable_node>
                                        </rvalue_node>
                                      </add_node>
                                  </return_node>
                                </sequence_node>
                              </instructions>
                            </block_node>
                          </function_definition_node>
                        </function pointer>
                        <arguments>
                          <sequence_node size='1'>
                            <integer_node>8</integer_node>
                          </sequence_node>
                        </arguments>
                      </function_call_node>
                      <function_definition_node return_type='integer'>
                        <arguments>
                          <sequence_node size='1'>
                            <declaration_node name='i' qualifier='private' type='integer'>
                            </declaration_node>
                          </sequence_node>
                        </arguments>
                        <block_node>
                          <declarations>
                          </declarations>
                          <instructions>
                            <sequence_node size='1'>
                              <return_node>
                                  <mul_node>
                                    <rvalue_node>
                                        <variable_node>i</variable_node>
                                    </rvalue_node>
                                    <integer_node>2</integer_node>
                                  </mul_node>
                              </return_node>
                            </sequence_node>
                          </instructions>
                        </block_node>
                      </function_definition_node>
                    </sequence_node>
                  </arguments>
                </function_call_node>
              </sequence_node>
            </write_node>
            <return_node>
                <integer_node>0</integer_node>
            </return_node>
          </sequence_node>
        </instructions>
      </block_node>
  </program_node>
</sequence_node>
