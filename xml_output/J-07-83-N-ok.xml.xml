<sequence_node size='2'>
  <declaration_node name='f' qualifier='private' type='var'>
  <initializer>
      <function_definition_node return type='void'>
        <arguments>
          <sequence_node size='0'>
          </sequence_node>
        </arguments>
        <block_node>
          <declarations>
            <sequence_node size='1'>
              <declaration_node name='main' qualifier='private' type='integer'>
              <initializer>
                  <integer_node>1</integer_node>
              </initializer>
              </declaration_node>
            </sequence_node>
          </declarations>
          <instructions>
            <sequence_node size='1'>
              <write_node>
                <sequence_node size='1'>
                  <add_node>
                    <mul_node>
                      <integer_node>2</integer_node>
                      <rvalue_node>
                          <variable_node>main</variable_node>
                      </rvalue_node>
                    </mul_node>
                    <rvalue_node>
                        <variable_node>main</variable_node>
                    </rvalue_node>
                  </add_node>
                </sequence_node>
              </write_node>
            </sequence_node>
          </instructions>
        </block_node>
      </function_definition_node>
  </initializer>
  </declaration_node>
  <program_node>
      <block_node>
        <declarations>
        </declarations>
        <instructions>
          <sequence_node size='2'>
            <evaluation_node>
              <function_call_node>
                <function pointer>
                  <rvalue_node>
                      <variable_node>f</variable_node>
                  </rvalue_node>
                </function pointer>
                <arguments>
                  <sequence_node size='0'>
                  </sequence_node>
                </arguments>
              </function_call_node>
            </evaluation_node>
            <return_node>
                <integer_node>0</integer_node>
            </return_node>
          </sequence_node>
        </instructions>
      </block_node>
  </program_node>
</sequence_node>
